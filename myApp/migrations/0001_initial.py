# Generated by Django 4.0.1 on 2022-04-18 09:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Base',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='myApp.base')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('role', models.CharField(choices=[('admin', 'boss'), ('Operator', 'ishchi-xodim')], max_length=100)),
                ('percentage', models.IntegerField(blank=True, null=True)),
                ('phone_user', models.CharField(max_length=17)),
                ('add_phone_user', models.CharField(max_length=17)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            bases=('myApp.base', models.Model),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BusinessPlan',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='myApp.base')),
                ('image', models.ImageField(null=True, upload_to='images/')),
                ('name_business', models.CharField(max_length=100)),
                ('money_min', models.CharField(max_length=70)),
                ('profit_year', models.CharField(max_length=70)),
                ('profit_month', models.CharField(max_length=70)),
                ('cost', models.IntegerField()),
                ('text_min', models.TextField(max_length=100)),
                ('number_of_workers', models.CharField(max_length=70)),
                ('land_area', models.CharField(max_length=70)),
                ('answer', models.CharField(max_length=70)),
            ],
            bases=('myApp.base',),
        ),
        migrations.CreateModel(
            name='GrantProject',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='myApp.base')),
                ('category', models.CharField(blank=True, max_length=70, null=True)),
                ('organization', models.CharField(max_length=150)),
                ('project_name', models.CharField(max_length=150)),
                ('price', models.CharField(default=0, max_length=30)),
                ('end_time', models.DateTimeField(verbose_name='Deadline')),
                ('link', models.CharField(max_length=256)),
            ],
            bases=('myApp.base',),
        ),
        migrations.CreateModel(
            name='Petition',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='myApp.base')),
                ('working_phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message='Telefon raqami quyidagi formatda kiritilishi kerak: +99 893 090 10 07.', regex='^\\+?1?\\d{9,15}$')], verbose_name='Telefon:')),
                ('viewed', models.BooleanField(null=True)),
            ],
            bases=('myApp.base',),
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='myApp.base')),
                ('image', models.ImageField(null=True, upload_to='images/')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(max_length=50)),
                ('academic_degree', models.CharField(max_length=60)),
                ('text_min', models.TextField(max_length=150)),
            ],
            bases=('myApp.base',),
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.province')),
            ],
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='myApp.base')),
                ('number', models.CharField(max_length=15)),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operator_name', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('myApp.base',),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='myApp.base')),
                ('phone_number', models.CharField(max_length=15)),
                ('add_phone_number', models.CharField(blank=True, max_length=15)),
                ('first_name', models.CharField(blank=True, max_length=50)),
                ('last_name', models.CharField(blank=True, max_length=50)),
                ('business_name', models.CharField(blank=True, max_length=100)),
                ('business_type', models.CharField(blank=True, choices=[('business', 'Biznes Reja'), ('teo', 'TEO'), ('grand', 'Grand'), ('boshqa', 'Boshqa')], max_length=50)),
                ('quality', models.CharField(blank=True, choices=[('Tez', 'Tez'), ('narx', 'Narx'), ('sifat', 'Sifat'), ('narx+sifat', 'Narx + Sifat')], max_length=50)),
                ('price', models.PositiveIntegerField(default=0)),
                ('payme', models.PositiveIntegerField(default=0)),
                ('order_finished_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('color_type', models.CharField(blank=True, max_length=15, null=True)),
                ('petition_type', models.CharField(blank=True, max_length=20, null=True)),
                ('comment', models.TextField(blank=True)),
                ('comment_worker', models.TextField(blank=True)),
                ('document', models.FileField(blank=True, upload_to='documents/')),
                ('stat_date', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Start')),
                ('end_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('status', models.BooleanField(default=False, verbose_name='Ish tugallandimi:')),
                ('operator_field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='operator_orders', to=settings.AUTH_USER_MODEL)),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='myApp.province')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='myApp.region')),
                ('user_field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_orders', to=settings.AUTH_USER_MODEL)),
                ('worker_field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='worker_orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('updated_at',),
            },
            bases=('myApp.base',),
        ),
    ]
